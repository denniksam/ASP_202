@{
    ViewData["Title"] = "Email";
}

<div class="text-center">
    <h1 class="display-4">Підтвердження електронної пошти</h1>
</div>

<p>
    Загальна схема:
</p>
<ul>
    <li>Користувач вводить (при реєстрації або у кабінеті) адресу електронної пошти</li>
    <li>Генеруємо випадковий код і надсилаємо його на задану пошту</li>
    <li>Зберігаємо цей код у БД для даного користувача. Наявність коду свідчитиме
        про відсутність її підтвердження
    </li>
    <li>При вході користувача у систему (у кабінет) виводимо повідомлення про 
        непідтверждену пошту
    </li>
    <li>Розробляємо форму для введення коду підтвердження</li>
    <li>Розробляємо сторінку, перехід на яку також підтвердить пошту (посилання
        з електронного листа)
    </li>
</ul>
<p>
    Крок 1 - Реєструємо пошту для сайту. Не рекомендується вживати власні 
    (персональні) акаунти, рекомендується під кожен проєкт створювати нові
    акаунти. На прикладі Google - необхідна двофакторна автентифікація.
</p>
<p>
    Після створення аккаунта, переходимо у розділ "безпека", 
    "двоетапна автентифікація", "паролі застосунків".
    Новий пароль буде показано один раз, тому готуємо місце для копіювання.
</p>
<p>
    Вилучаємо appsettings.json з репозиторію. ПКМ - Git - Ignore and Untrack item.
    Створюємо файл-зразок appsettings-example.json у якому всі паролі замінюємо
    "CHANGE ME". У файлі Readme.md додаємо повідомлення про необхідність
    перейменування файлу після клонування репозиторію.
</p>
<p>
    Генеруємо пароль застосунку:<br/>
    Застосунок: "пошта"<br />
    Пристрій: "Mac/Windows"<br />
    Копіюємо пароль і вставляємо у appsettings.json
</p>
<p>
    У контроллері додаємо залежність від конфігурації @ViewData["config"]
</p>